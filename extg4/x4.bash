x4-source(){ echo $BASH_SOURCE ; }
x4-vi(){ vi $(x4-source) ; }
x4-env(){  olocal- ; opticks- ; }
x4-usage(){ cat << EOU

X4 Usage 
===================


xerces-c libicu version
---------------------------

::

	[  8%] Linking CXX shared library libExtG4.so
	[ 55%] Built target ExtG4
	[ 57%] Linking CXX executable X4EntityTest
	/usr/bin/ld: warning: libicui18n.so.58, needed by /home/blyth/local/opticks/externals/lib/libxerces-c-3.1.so, not found (try using -rpath or -rpath-link)
	/usr/bin/ld: warning: libicuuc.so.58, needed by /home/blyth/local/opticks/externals/lib/libxerces-c-3.1.so, not found (try using -rpath or -rpath-link)
	/usr/bin/ld: warning: libicudata.so.58, needed by /home/blyth/local/opticks/externals/lib/libxerces-c-3.1.so, not found (try using -rpath or -rpath-link)
	/home/blyth/local/opticks/externals/lib/libxerces-c-3.1.so: undefined reference to `u_toupper_58'
	/home/blyth/local/opticks/externals/lib/libxerces-c-3.1.so: undefined reference to `uset_getSerializedSet_58'
	/home/blyth/local/opticks/externals/lib/libxerces-c-3.1.so: undefined reference to `UCNV_FROM_U_CALLBACK_SUBSTITUTE_58'
	/home/blyth/local/opticks/externals/lib/libxerces-c-3.1.so: undefined reference to `ucnv_setFromUCallBack_58'
	/home/blyth/local/opticks/externals/lib/libxerces-c-3.1.so: undefined reference to `uset_getSerializedRange_58'


::

	[blyth@localhost extg4]$ rpm -ql libicu
	/usr/lib64/libicudata.so.50
	/usr/lib64/libicudata.so.50.1.2
	/usr/lib64/libicui18n.so.50
	/usr/lib64/libicui18n.so.50.1.2
	/usr/lib64/libicuio.so.50
	/usr/lib64/libicuio.so.50.1.2
	/usr/lib64/libicule.so.50
	/usr/lib64/libicule.so.50.1.2



Looks like the xerces-c installed by xercesc- is expecting a newer libicu than available, 
perhaps use system xerces-c for compatibility.

Reproduce it with opticks/examples/UseOpticksXercesC



EOU
}


x4-dir(){ echo $(dirname $(x4-source)) ; }
x4-cd(){  cd $(x4-dir) ; }
x4-c(){   cd $(x4-dir) ; }
x4--(){   opticks-- $(x4-dir) ; }
x4-t(){   x4-cd ;  om- ; om-test ;  }



x4-names-boolean(){ cat << EON
UnionSolid
IntersectionSolid
SubtractionSolid
EON
} 

x4-names()
{
   local iwd=$PWD
   g4- 

   x4-names-boolean

   cd $(g4-dir)/source/persistency/gdml/src
   grep ==\"G4 G4GDMLWriteSolids.cc | perl -n -e 'm,\"G4(\w*)\", && print "$1\n" ' -  
   cd $iwd
}


x4-foreach()
{
   local func=$1
   printf "// generated by $func $(date) \n" ; 
   local name
   x4-names | while read name ; do 
      $func $name
   done
}

x4-entity(){ x4-foreach $FUNCNAME- ; }
x4-entity-(){
   local name=$1
   local n=$(printf "n.push_back(\"G4%s\")" $name )
   local t=$(printf "t.push_back(_G4%s)" $name )
   printf "    %-35s ; %-35s ; \n" $n $t 
}

x4-enum(){  x4-foreach $FUNCNAME- ; }
x4-enum-(){ printf "    _G4%s ,\n" $1 ; }

x4-case(){  x4-foreach $FUNCNAME- ; }
x4-case-(){ 
   local name=$1
   local a=$(printf "case _G4$name" )
   local b=$(printf "convert$name()" )
   local c="; break ;"
   printf "    %-25s : %-30s %s \n" "$a" "$b" "$c"  
} 


x4-convert-cc(){  x4-foreach $FUNCNAME- ; }
x4-convert-cc-(){ cat << EOC
void X4SolidBase::convert$1()
{  
    const G4${1}* const solid = static_cast<const G4${1}*>(m_solid);
    assert(solid); 
    assert(0) ; 
}
EOC
}
x4-convert-hh(){  x4-foreach $FUNCNAME- ; }
x4-convert-hh-(){ cat << EOC
        void convert$1();
EOC
}

x4-include(){  x4-foreach $FUNCNAME- ; }
x4-include-(){ echo "#include \"G4$1.hh\"" ; }




x4-testconfig () 
{ 
    local testconfig;
    local testname;
    if [ -n "$TESTCONFIG" ]; then
        testconfig=${TESTCONFIG};
    fi;
    echo $testconfig

}


x4-csg--()
{
    local cmdline=$*;
    local testconfig=$(x4-testconfig)
    echo testconfig $testconfig

    op.sh $cmdline \
          --rendermode +global,+axis \
          --animtimemax 20 \
          --timemax 20 \
          --geocenter \
          --eye 1,0,0 \
          --dbganalytic \
          --test \
          --testconfig "$testconfig" 
}

x4-csg-(){ X4CSGTest ; }
x4-csg(){ TESTNAME=$FUNCNAME TESTCONFIG=$($FUNCNAME- 2>&1 1>/dev/null) x4-csg-- $* ;}  

## TESTCONFIG is a capture of stderr with stdout ignored 


