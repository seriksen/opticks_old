#!/usr/bin/env python
"""
ezgdml.py
===========

This is for quick looking at simple GDML, such
as the single solid GDML files generated by g4codegen.
For a full GDML parser see analytic/gdml.py 

::

   ipython -i $(which ezgdml.py) -- g4codegen/tests/x016.gdml

   ezgdml-
   ezgdml--


"""
import os, sys, argparse, logging
from collections import OrderedDict as odict

import lxml.etree as ET
xmlparse_ = lambda _:ET.parse(os.path.expandvars(_)).getroot()
tostring_ = lambda _:ET.tostring(_)

log = logging.getLogger(__name__)

class EZGDML(object):
    def __init__(self, path):
        lines = file(path).read().split("\n")
        d = odict()
        for i, line in enumerate(lines):
            print(line)
        pass
        self.path = path 

    def __repr__(self):
        return "\n".join(["ezgdml.py %s" % self.path]) 
     

def pr(e):
    print(tostring_(e))


if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)

    parser = argparse.ArgumentParser(__doc__)
    parser.add_argument(     "path", nargs='?', default=None, help="File path of GDML" )
    args = parser.parse_args()


    e = xmlparse_(args.path)
    s = e.find("solids")




       
